import{_ as r,c as a,C as t,U as s,o,D as n}from"./chunks/framework.055b81e2.js";const f=JSON.parse('{"title":"prettier 格式化","description":"","frontmatter":{},"headers":[],"relativePath":"guide/prettier.md","lastUpdated":1685529683000}'),l={name:"guide/prettier.md"},i=s(`<h1 id="prettier-格式化" tabindex="-1">prettier 格式化 <a class="header-anchor" href="#prettier-格式化" aria-label="Permalink to &quot;prettier 格式化&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>基于 prettier 最新版本@2.8.8 实现，感谢<code>DCloud-HX-WKP</code>在开发过程中提供了所遇问题的解决方案</p><p>支持读取项目根目录配置文件进行 prettier 格式化，如果没有配置文件，则会自动在项目根目录创建<code>.prettierrc.js</code>和<code>.prettierignore</code>（具体用法请查看下方）</p></div><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><ol><li>避免与官方格式化冲突：工具&gt;设置&gt;编辑器设置&gt;取消勾选保存时自动格式化</li><li>插件提供一个<code>ctrl+s</code>命令，名为<code>prettier格式化代码</code>，与 HBuilderX 默认保存命令重复，在任意文件中按下<code>ctrl+s</code>会出现选择菜单，设置<code>以后只选一个</code>为<code>prettier格式化代码</code></li><li>接下来就在文件中使用<code>ctrl+s</code>就可以了，会使用 prettier 格式化代码并在格式化后保存</li></ol><h2 id="插件如何工作-没有自动生成配置文件请看此处" tabindex="-1">插件如何工作（没有自动生成配置文件请看此处） <a class="header-anchor" href="#插件如何工作-没有自动生成配置文件请看此处" aria-label="Permalink to &quot;插件如何工作（没有自动生成配置文件请看此处）&quot;">​</a></h2><ol><li>在 HBuilderX 左侧目录的任意项目的任意文件中<code>ctrl+s</code>，插件会获取该文件所在项目目录，判断所在项目根目录下是否存在 prettier 配置文件、是否存在 prettier 忽略文件<code>.prettierignore</code>，如果不存在，则会在项目根目录创建默认的<code>.prettierrc.js</code>和<code>.prettierignore</code>，插件会基于这两个文件进行格式化</li><li><code>注意！！！</code>如果所要格式化的文件<code>不在 HBuilderX 左侧目录的项目列表中</code>，则<code>不会创建配置文件与忽略文件</code>，而是使用插件的默认配置，在 HBuilderX <code>工具&gt;设置&gt;插件配置</code>中可以设置默认配置文件，如想使用根目录配置文件，需要先导入项目到 HBuilderX 左侧目录中，另外，默认配置文件权重小于项目根目录配置文件，这一点同 vscode 一致</li><li>因为是基于配置文件格式化，所以允许 HBuilderX 不同项目之间配置文件配置不同，进行不同配置的格式化，互不影响</li><li>如果不想使用插件创建的配置文件，比如之前已有统一团队风格的 prettier 配置文件，可以复制该文件到项目根目录下，插件则不会新建，而是直接使用该配置文件，配置文件无固定后缀名要求，属于 prettier 配置文件即可（别忘了，该项目需要在 HBuilderX 左侧目录中）</li></ol><h2 id="与官方-prettier-插件的区别" tabindex="-1">与官方 prettier 插件的区别： <a class="header-anchor" href="#与官方-prettier-插件的区别" aria-label="Permalink to &quot;与官方 prettier 插件的区别：&quot;">​</a></h2><p>官方的 prettier 不支持使用根目录 prettier 配置文件，不方便团队统一风格</p><h2 id="prettierignore忽略文件" tabindex="-1"><code>.prettierignore</code>忽略文件 <a class="header-anchor" href="#prettierignore忽略文件" aria-label="Permalink to &quot;\`.prettierignore\`忽略文件&quot;">​</a></h2><p><code>.prettierignore</code>指定哪些文件或文件目录忽略 prettier 的格式化</p><p>插件默认生成的<code>.prettierignore</code>内容是<code>uni_modules</code>，表示该目录下的所有文件 prettier 会忽略，在这些文件中<code>ctrl+s</code>不会进行格式化</p><h2 id="prettier-转换-editorconfig-配置" tabindex="-1">prettier 转换.editorconfig 配置 <a class="header-anchor" href="#prettier-转换-editorconfig-配置" aria-label="Permalink to &quot;prettier 转换.editorconfig 配置&quot;">​</a></h2><blockquote><p>插件支持.editorconfig 转换：prettier 会转换.editorconfig 的一些配置属性为 prettier 相应的配置属性</p></blockquote><p>目前 prettier 支持转换的.editorconfig 配置属性</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">*</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">indent_style = space</span></span>
<span class="line"><span style="color:#ABB2BF;">indent_size = </span><span style="color:#D19A66;">4</span></span>
<span class="line"><span style="color:#ABB2BF;">max_line_length = </span><span style="color:#D19A66;">80</span></span>
<span class="line"><span style="color:#ABB2BF;">end_of_line = lf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>对应转换成的 prettier 配置属性</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{ useTabs: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, tabWidth: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, printWidth: </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">, endOfLine: </span><span style="color:#98C379;">&#39;lf&#39;</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="配置默认不支持的文件类型的格式化" tabindex="-1">配置默认不支持的文件类型的格式化 <a class="header-anchor" href="#配置默认不支持的文件类型的格式化" aria-label="Permalink to &quot;配置默认不支持的文件类型的格式化&quot;">​</a></h2><p>prettier 默认支持 <code>JavaScript</code>、 <code>Flow</code>、 <code>JSX</code>、<code>TypeScript</code>、 <code>TSX</code>、 <code>JSON.stringify</code>、<code>JSON</code>、<code>JSON with Comments</code>、<code>JSON5</code>、<code>CSS</code>、<code>PostCSS</code>、<code>ess</code>、<code>SCSS</code>、<code>Handlebars</code>、<code>GraphQL</code>、<code>Markdown</code>、<code>MDX</code>、<code>Angular</code>、<code>HTML</code>、<code>Lightning Web Components</code>、<code>Vue</code>、<code>YAML</code></p><h3 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h3><p>对于不默认支持格式化的文件类型，需要安装 prettier 插件，并在配置文件中配置<code>plugins</code>属性</p><p>比如想要格式化 java 和 xml 文件，使用 node 安装 prettier 插件（对应语言插件请查看下方插件列表）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#E5C07B;">D</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">prettier</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">plugin</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">java</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">prettier</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">plugin</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">xml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="plugins-支持绝对路径" tabindex="-1">plugins 支持绝对路径 <a class="header-anchor" href="#plugins-支持绝对路径" aria-label="Permalink to &quot;plugins 支持绝对路径&quot;">​</a></h3><p>可以使用绝对路径让 prettier 找到它的插件（可以单独使用一个文件夹存放所有插件，避免重复安装）</p><p>.prettierrc.js 设置如下</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;D:/uniapp-projects/示例项目/node_modules/prettier-plugin-java&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;D:/uniapp-projects/示例项目/node_modules/prettier-plugin-xml&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="相对路径" tabindex="-1">相对路径 <a class="header-anchor" href="#相对路径" aria-label="Permalink to &quot;相对路径&quot;">​</a></h3><p>.prettierrc.js 设置如下</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">plugins: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;./node_modules/prettier-plugin-java&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&#39;./node_modules/prettier-plugin-xml&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>现在 prettier 可以正常格式化 java、xml 文件了</p><h3 id="插件列表" tabindex="-1">插件列表 <a class="header-anchor" href="#插件列表" aria-label="Permalink to &quot;插件列表&quot;">​</a></h3><h4 id="官方插件" tabindex="-1">官方插件 <a class="header-anchor" href="#官方插件" aria-label="Permalink to &quot;官方插件&quot;">​</a></h4><ul><li><a href="https://github.com/prettier/plugin-php" target="_blank" rel="noreferrer"><code>@prettier/plugin-php</code></a></li><li><a href="https://github.com/prettier/plugin-pug" target="_blank" rel="noreferrer"><code>@prettier/plugin-pug</code></a> by <a href="https://github.com/Shinigami92" target="_blank" rel="noreferrer"><strong>@Shinigami92</strong></a></li><li><a href="https://github.com/prettier/plugin-ruby" target="_blank" rel="noreferrer"><code>@prettier/plugin-ruby</code></a></li><li><a href="https://github.com/prettier/plugin-xml" target="_blank" rel="noreferrer"><code>@prettier/plugin-xml</code></a></li></ul><h4 id="社区插件" tabindex="-1">社区插件 <a class="header-anchor" href="#社区插件" aria-label="Permalink to &quot;社区插件&quot;">​</a></h4><ul><li><a href="https://github.com/dangmai/prettier-plugin-apex" target="_blank" rel="noreferrer"><code>prettier-plugin-apex</code></a> by <a href="https://github.com/dangmai" target="_blank" rel="noreferrer"><strong>@dangmai</strong></a></li><li><a href="https://github.com/withastro/prettier-plugin-astro" target="_blank" rel="noreferrer"><code>prettier-plugin-astro</code></a> by <a href="https://github.com/withastro/prettier-plugin-astro/graphs/contributors" target="_blank" rel="noreferrer"><strong>@withastro contributors</strong></a></li><li><a href="https://github.com/gicentre/prettier-plugin-elm" target="_blank" rel="noreferrer"><code>prettier-plugin-elm</code></a> by <a href="https://github.com/gicentre" target="_blank" rel="noreferrer"><strong>@giCentre</strong></a></li><li><a href="https://github.com/adamzapasnik/prettier-plugin-erb" target="_blank" rel="noreferrer"><code>prettier-plugin-erb</code></a> by <a href="https://github.com/adamzapasnik" target="_blank" rel="noreferrer"><strong>@adamzapasnik</strong></a></li><li><a href="https://github.com/NaridaL/glsl-language-toolkit/tree/main/packages/prettier-plugin-glsl" target="_blank" rel="noreferrer"><code>prettier-plugin-glsl</code></a> by <a href="https://github.com/NaridaL" target="_blank" rel="noreferrer"><strong>@NaridaL</strong></a></li><li><a href="https://github.com/NiklasPor/prettier-plugin-go-template" target="_blank" rel="noreferrer"><code>prettier-plugin-go-template</code></a> by <a href="https://github.com/NiklasPor" target="_blank" rel="noreferrer"><strong>@NiklasPor</strong></a></li><li><a href="https://github.com/jhipster/prettier-java" target="_blank" rel="noreferrer"><code>prettier-plugin-java</code></a> by <a href="https://github.com/jhipster" target="_blank" rel="noreferrer"><strong>@JHipster</strong></a></li><li><a href="https://github.com/Stedi/prettier-plugin-jsonata" target="_blank" rel="noreferrer"><code>prettier-plugin-jsonata</code></a> by <a href="https://github.com/Stedi" target="_blank" rel="noreferrer"><strong>@Stedi</strong></a></li><li><a href="https://github.com/Angry-Potato/prettier-plugin-kotlin" target="_blank" rel="noreferrer"><code>prettier-plugin-kotlin</code></a> by <a href="https://github.com/Angry-Potato" target="_blank" rel="noreferrer"><strong>@Angry-Potato</strong></a></li><li><a href="https://github.com/dfinity/prettier-plugin-motoko" target="_blank" rel="noreferrer"><code>prettier-plugin-motoko</code></a> by <a href="https://github.com/dfinity" target="_blank" rel="noreferrer"><strong>@dfinity</strong></a></li><li><a href="https://github.com/joedeandev/prettier-plugin-nginx" target="_blank" rel="noreferrer"><code>prettier-plugin-nginx</code></a> by <a href="https://github.com/joedeandev" target="_blank" rel="noreferrer"><strong>@joedeandev</strong></a></li><li><a href="https://github.com/umidbekk/prettier-plugin-prisma" target="_blank" rel="noreferrer"><code>prettier-plugin-prisma</code></a> by <a href="https://github.com/umidbekk" target="_blank" rel="noreferrer"><strong>@umidbekk</strong></a></li><li><a href="https://github.com/eemeli/prettier-plugin-properties" target="_blank" rel="noreferrer"><code>prettier-plugin-properties</code></a> by <a href="https://github.com/eemeli" target="_blank" rel="noreferrer"><strong>@eemeli</strong></a></li><li><a href="https://github.com/un-ts/prettier/tree/master/packages/sh" target="_blank" rel="noreferrer"><code>prettier-plugin-sh</code></a> by <a href="https://github.com/JounQin" target="_blank" rel="noreferrer"><strong>@JounQin</strong></a></li><li><a href="https://github.com/un-ts/prettier/tree/master/packages/sql" target="_blank" rel="noreferrer"><code>prettier-plugin-sql</code></a> by <a href="https://github.com/JounQin" target="_blank" rel="noreferrer"><strong>@JounQin</strong></a></li><li><a href="https://github.com/nene/prettier-plugin-sql-cst" target="_blank" rel="noreferrer"><code>prettier-plugin-sql-cst</code></a> by <a href="https://github.com/nene" target="_blank" rel="noreferrer"><strong>@nene</strong></a></li><li><a href="https://github.com/prettier-solidity/prettier-plugin-solidity" target="_blank" rel="noreferrer"><code>prettier-plugin-solidity</code></a> by <a href="https://github.com/mattiaerre" target="_blank" rel="noreferrer"><strong>@mattiaerre</strong></a></li><li><a href="https://github.com/UnwrittenFun/prettier-plugin-svelte" target="_blank" rel="noreferrer"><code>prettier-plugin-svelte</code></a> by <a href="https://github.com/UnwrittenFun" target="_blank" rel="noreferrer"><strong>@UnwrittenFun</strong></a></li><li><a href="https://github.com/bd82/toml-tools/tree/master/packages/prettier-plugin-toml" target="_blank" rel="noreferrer"><code>prettier-plugin-toml</code></a> by <a href="https://github.com/bd82" target="_blank" rel="noreferrer"><strong>@bd82</strong></a></li></ul><h2 id="手动指定-prettier-的-parser" tabindex="-1">手动指定 prettier 的 parser <a class="header-anchor" href="#手动指定-prettier-的-parser" aria-label="Permalink to &quot;手动指定 prettier 的 parser&quot;">​</a></h2><p>对于一些自定义文件，本质上仍属于 prettier 支持的文件类型，可以在 prettier 配置文件中手动指定 parser</p><p>比如后缀名是.jql，但本质上是 js，可以手动指定为 babel</p><p>比如后缀名是.nvue，但本质上是 vue，可以手动指定为 vue（这里仅做示例，nvue 的 parser 插件已内置，无需在配置文件加入）</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#98C379;">&quot;parsers&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;.jql&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;.nvue&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;vue&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="所有支持的-parser" tabindex="-1">所有支持的 parser <a class="header-anchor" href="#所有支持的-parser" aria-label="Permalink to &quot;所有支持的 parser&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>js</code>的 parser 是<code>babel</code>，<code>ts</code>的 parser 对应<code>babel-ts</code>或者<code>typescript</code></p></div><ul><li><code>&quot;babel&quot;</code> (via <a href="https://github.com/babel/babel/tree/main/packages/babel-parser" target="_blank" rel="noreferrer">@babel/parser</a>) <em>Named <code>&quot;babylon&quot;</code> until v1.16.0</em></li><li><code>&quot;babel-flow&quot;</code> (same as <code>&quot;babel&quot;</code> but enables Flow parsing explicitly to avoid ambiguity) <em>First available in v1.16.0</em></li><li><code>&quot;babel-ts&quot;</code> (similar to <code>&quot;typescript&quot;</code> but uses Babel and its TypeScript plugin) <em>First available in v2.0.0</em></li><li><code>&quot;flow&quot;</code> (via <a href="https://github.com/facebook/flow/tree/master/src/parser" target="_blank" rel="noreferrer">flow-parser</a>)</li><li><code>&quot;typescript&quot;</code> (via <a href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noreferrer">@typescript-eslint/typescript-estree</a>) <em>First available in v1.4.0</em></li><li><code>&quot;espree&quot;</code> (via <a href="https://github.com/eslint/espree" target="_blank" rel="noreferrer">espree</a>) <em>First available in v2.2.0</em></li><li><code>&quot;meriyah&quot;</code> (via <a href="https://github.com/meriyah/meriyah" target="_blank" rel="noreferrer">meriyah</a>) <em>First available in v2.2.0</em></li><li><code>&quot;acorn&quot;</code> (via <a href="https://github.com/acornjs/acorn" target="_blank" rel="noreferrer">acorn</a>) <em>First available in v2.6.0</em></li><li><code>&quot;css&quot;</code> (via <a href="https://github.com/postcss/postcss-scss" target="_blank" rel="noreferrer">postcss-scss</a> and <a href="https://github.com/shellscape/postcss-less" target="_blank" rel="noreferrer">postcss-less</a>, autodetects which to use) <em>First available in v1.7.1</em></li><li><code>&quot;scss&quot;</code> (same parsers as <code>&quot;css&quot;</code>, prefers postcss-scss) <em>First available in v1.7.1</em></li><li><code>&quot;less&quot;</code> (same parsers as <code>&quot;css&quot;</code>, prefers postcss-less) <em>First available in v1.7.1</em></li><li><code>&quot;json&quot;</code> (via <a href="https://babeljs.io/docs/en/next/babel-parser.html#babelparserparseexpressioncode-options" target="_blank" rel="noreferrer">@babel/parser parseExpression</a>) <em>First available in v1.5.0</em></li><li><code>&quot;json5&quot;</code> (same parser as <code>&quot;json&quot;</code>, but outputs as <a href="https://json5.org/" target="_blank" rel="noreferrer">json5</a>) <em>First available in v1.13.0</em></li><li><code>&quot;json-stringify&quot;</code> (same parser as <code>&quot;json&quot;</code>, but outputs like <code>JSON.stringify</code>) <em>First available in v1.13.0</em></li><li><code>&quot;graphql&quot;</code> (via <a href="https://github.com/graphql/graphql-js/tree/master/src/language" target="_blank" rel="noreferrer">graphql/language</a>) <em>First available in v1.5.0</em></li><li><code>&quot;markdown&quot;</code> (via <a href="https://github.com/wooorm/remark/tree/main/packages/remark-parse" target="_blank" rel="noreferrer">remark-parse</a>) <em>First available in v1.8.0</em></li><li><code>&quot;mdx&quot;</code> (via <a href="https://github.com/wooorm/remark/tree/main/packages/remark-parse" target="_blank" rel="noreferrer">remark-parse</a> and <a href="https://github.com/mdx-js/mdx/tree/master/packages/mdx" target="_blank" rel="noreferrer">@mdx-js/mdx</a>) <em>First available in v1.15.0</em></li><li><code>&quot;html&quot;</code> (via <a href="https://github.com/ikatyang/angular-html-parser/tree/master/packages/angular-html-parser" target="_blank" rel="noreferrer">angular-html-parser</a>) <em>First available in 1.15.0</em></li><li><code>&quot;vue&quot;</code> (same parser as <code>&quot;html&quot;</code>, but also formats vue-specific syntax) <em>First available in 1.10.0</em></li><li><code>&quot;angular&quot;</code> (same parser as <code>&quot;html&quot;</code>, but also formats angular-specific syntax via <a href="https://github.com/ikatyang/angular-estree-parser" target="_blank" rel="noreferrer">angular-estree-parser</a>) <em>First available in 1.15.0</em></li><li><code>&quot;lwc&quot;</code> (same parser as <code>&quot;html&quot;</code>, but also formats LWC-specific syntax for unquoted template attributes) <em>First available in 1.17.0</em></li><li><code>&quot;yaml&quot;</code> (via <a href="https://github.com/eemeli/yaml" target="_blank" rel="noreferrer">yaml</a> and <a href="https://github.com/ikatyang/yaml-unist-parser" target="_blank" rel="noreferrer">yaml-unist-parser</a>) <em>First available in 1.14.0</em></li></ul><h2 id="自行设置快捷键" tabindex="-1">自行设置快捷键 <a class="header-anchor" href="#自行设置快捷键" aria-label="Permalink to &quot;自行设置快捷键&quot;">​</a></h2><p>HBuilderX 上方菜单&gt;工具&gt;自定义快捷键&gt;更改插件快捷键</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{ </span><span style="color:#E06C75;">&quot;key&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Ctrl+S&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.prettier&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;override&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="旧版本-0-0-14-之前-formatandsave命令迁移" tabindex="-1">旧版本(0.0.14 之前)<code>formatAndSave</code>命令迁移 <a class="header-anchor" href="#旧版本-0-0-14-之前-formatandsave命令迁移" aria-label="Permalink to &quot;旧版本(0.0.14 之前)\`formatAndSave\`命令迁移&quot;">​</a></h2><ol><li><p>如果使用的是旧版本的<code>formatAndSave</code>命令，HBuilderX 上方菜单&gt;工具&gt;自定义快捷键&gt;删除以下代码</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{ </span><span style="color:#E06C75;">&quot;key&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ctrl+s&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.formatAndSave&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;override&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>任意文件中按下<code>ctrl+s</code>设置<code>以后只选一个</code>为<code>prettier格式化代码</code>，工具&gt;自定义快捷键&gt;将会自动生成下方代码</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{ </span><span style="color:#E06C75;">&quot;key&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ctrl+s&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;command&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;extension.prettier&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">&quot;override&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h2 id="为什么不使用onwillsavetextdocument" tabindex="-1">为什么不使用<a href="https://hx.dcloud.net.cn/ExtensionDocs/Api/workspace/onWillSaveTextDocument?id=onwillsavetextdocument" target="_blank" rel="noreferrer">onWillSaveTextDocument</a> <a class="header-anchor" href="#为什么不使用onwillsavetextdocument" aria-label="Permalink to &quot;为什么不使用[onWillSaveTextDocument](https://hx.dcloud.net.cn/ExtensionDocs/Api/workspace/onWillSaveTextDocument?id=onwillsavetextdocument)&quot;">​</a></h2><p>HBuilderX 插件开发提供了保存事件<code>onWillSaveTextDocument</code>，为什么不使用该事件触发格式化，而是创建一个<code>ctrl+s</code>命令来替换 HBuilderX 默认保存命令？</p><p>因为该事件只有编辑后保存才会触发，文件未发生更改情况下不会触发</p>`,52);function p(c,d,u,b,g,h){const e=n("git-talk");return o(),a("div",null,[i,t(e)])}const y=r(l,[["render",p]]);export{f as __pageData,y as default};
